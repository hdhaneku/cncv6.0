# Author - Wojciech Dec (wdec@cisco.com)
Description: "Sample template for deploying CDG4.0 VMs - v4.4"

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: Must be the VPC Id of an existing Virtual Private Cloud.

  CDGAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide CDG AMI ID

  CDGSSHPassword:
    Type: String
    NoEcho: True
    Description: Enter the SSH password to be configured on the CDG

  SecGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Pre-created security group to be applied. Must allow ingress access for ports 22, 30160:31560

  CNCControllerPassword:
    Type: String
    NoEcho: True
    Description: Enter the cw-admin user password used to access CNC/Cw Controller

  DataDiskSize:
    Description: Cw data disk size.
    Type: Number
    MinValue: 20
    Default: 50

  CDGProfile:
    Type: String
    Description: Deployment profile of the CDG
    AllowedValues:
      - Standard
      - Extended
    Default: Standard

  InstanceType:
    Description: Enter EC2 instance type for the node instances. Default is m5.2xlarge.
    Type: String
    AllowedValues:
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - c5.4xlarge
      - c5.12xlarge
      - m5zn.3xlarge
    Default: m5zn.3xlarge

  InterfaceDeploymentMode:
    Type: String
    Description: Select the single (all traffic), dual (Management + Data) or triple (Management + Data + Control) interface deployment mode.
    AllowedValues:
      - 1
      - 2
      - 3

  CDGInterface0SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first interface subnet for the CDG VM.

  CDGInterface0Gateway:
    Type: String
    Description: Enter the  default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDGInterface1SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first interface subnet for the CDG VM. Ignored if not using dual interface mode.

  CDGInterface1Gateway:
    Type: String
    Description: Enter the  default gateway on the selected  subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: "0.0.0.1"

  CDGInterface2SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first interface subnet for the CDG VM. Ignored if not using triple interface mode.

  CDGInterface2Gateway:
    Type: String
    Description: Enter the  default gateway on the selected  subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: "0.0.0.1"

  CDGInterface0IPAddress:
    Type: String
    Description: OPTIONAL - Enter a *free* IP address on the 1st subnet. If set to "0.0.0.0", an IP address will be allocated automatically .
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})|^$

  CDGInterface0SubnetNetmask:
    Type: String
    Description: Enter the subnet netmask in dotted decimal form, eg 255.255.255.0.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDGInterface1IPAddress:
    Type: String
    Description: OPTIONAL - Enter a *free* IP address on the 2nd subnet. If set to 0.0.0.0, an IP address will be allocated automatically.
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})|^$

  CDGInterface1SubnetNetmask:
    Type: String
    Description: Enter the subnet netmask in dotted decimal form, eg 255.255.255.0. Ignored if not using dual interface mode.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDGInterface2IPAddress:
    Type: String
    Description: OPTIONAL - Enter a *free* IP address on the 3rd subnet. If set to 0.0.0.0, an IP address will be allocated automatically.
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})|^$

  CDGInterface2SubnetNetmask:
    Type: String
    Description: Enter the subnet netmask in dotted decimal form, eg 255.255.255.0. Ignored if not using triple interface mode.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CNCControllerIP:
    Type: String
    Description: Specify the address of the Crosswork CDG controller
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

Conditions:
  DeployInterface0: !Equals
    - !Ref InterfaceDeploymentMode
    - "1"

  DeployInterface1: !Or
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "2"
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "3"

  DeployInterface2: !Equals
    - !Ref InterfaceDeploymentMode
    - "3"

  Setif0IP: !Not
    - !Equals
      - !Ref CDGInterface0IPAddress
      - "0.0.0.0"

  Setif1IP: !And
    - !Not
      - !Equals
        - !Ref CDGInterface1IPAddress
        - "0.0.0.0"
    - !Not
      - !Condition DeployInterface0

  Setif2IP: !And
    - !Not
      - !Equals
        - !Ref CDGInterface2IPAddress
        - "0.0.0.0"
    - !Not
      - !Condition DeployInterface0
    - !Not
      - !Condition DeployInterface1

Resources:
  EC2ENIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: eni-modification
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:AssignPrivateIpAddresses
                  - ec2:UnassignPrivateIpAddresses
                Resource: "*"

  CDGEC2IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${AWS::StackName}-CDG-EC2IamInstanceProfile
      Path: "/cdg/"
      Roles:
        - !Ref EC2ENIRole

  CDG1VNIC0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: "CDG1-VNIC0"
      GroupSet:
        - !Ref SecGroup
      PrivateIpAddresses: !If
        - Setif0IP
        - - Primary: true
            PrivateIpAddress: !Ref CDGInterface0IPAddress
        - !Ref 'AWS::NoValue'
      SubnetId: !Ref CDGInterface0SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG1-VNIC0

  CDG1VNIC1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: "CDG1-VNIC1"
      GroupSet:
        - !Ref SecGroup
      PrivateIpAddresses: !If
        - Setif1IP
        - - Primary: true
            PrivateIpAddress: !Ref CDGInterface1IPAddress
        - !Ref 'AWS::NoValue'
      SubnetId: !Ref CDGInterface1SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG1-VNIC1
    Condition: DeployInterface1

  CDG1VNIC2:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: "CDG1-VNIC2"
      GroupSet:
        - !Ref SecGroup
      PrivateIpAddresses: !If
        - Setif2IP
        - - Primary: true
            PrivateIpAddress: !Ref CDGInterface2IPAddress
        - !Ref 'AWS::NoValue'
      SubnetId: !Ref CDGInterface2SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG1-VNIC2
    Condition: DeployInterface2


  CommonLaunchTemplateCDG4:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-CommonLaunchTemplateCDG4
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        ImageId: !Ref "CDGAmiId"
        BlockDeviceMappings:
          - Ebs:
              VolumeSize: !Ref DataDiskSize
              DeleteOnTermination: True
              VolumeType: standard
            DeviceName: /dev/sdb
        MetadataOptions:
          HttpPutResponseHopLimit: 2
        IamInstanceProfile:
          Arn: !GetAtt
            - CDGEC2IamInstanceProfile
            - Arn

  CDGInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        Version: 1
        LaunchTemplateId: !Ref CommonLaunchTemplateCDG4
      NetworkInterfaces: !If
        - DeployInterface2
        - - NetworkInterfaceId: !Ref CDG1VNIC0
            DeviceIndex: "0"
          - NetworkInterfaceId: !Ref CDG1VNIC1
            DeviceIndex: "1"
          - NetworkInterfaceId: !Ref CDG1VNIC2
            DeviceIndex: "2"
        - !If
          - DeployInterface1
          - - NetworkInterfaceId: !Ref CDG1VNIC0
              DeviceIndex: "0"
            - NetworkInterfaceId: !Ref CDG1VNIC1
              DeviceIndex: "1"
          - - NetworkInterfaceId: !Ref CDG1VNIC0
              DeviceIndex: "0"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG4.0
      UserData: !Base64
        Fn::Join:
          - ''
          - - !Sub |
                AwsIamRole=${EC2ENIRole}
                ActiveVnics=${InterfaceDeploymentMode}
                AllowRFC8190=Yes
                AuditdAddress=
                AuditdPort=60
                ControllerCertChainPwd=${CNCControllerPassword}
                ControllerIP=${CNCControllerIP}
                ControllerPort=30607
                ControllerSignCertChain=cw-admin@${CNCControllerIP}:/home/cw-admin/controller.pem
                ControllerTlsCertChain=
                Deployment=Crosswork On-Premise
                Description=${AWS::StackName}-CDG4.0-1
                DGAppdataDisk=5
                DGCertChain=
                DGCertChainPwd=
                DGCertKey=
                DNS=169.254.169.253
                DNSSEC=False
                DNSTLS=False
                Domain=
                EnrollmentPassphrase=
                EnrollmentURI=
                Hostname=${AWS::StackName}-CDG4.0
                Label=
                LLMNR=False
                mDNS-False
                NTP=169.254.169.123
                NTPAuth=False
                NTPKey=
                NTPKeyFile=
                NTPKeyFilePwd=
                PortSNMPTrap=1062
                PortSyslogUDP=9514
                PortSyslogTCP=9898
                PortSyslogTLS=6514
                Profile=${CDGProfile}
                ProxyBypass=
                ProxyCertChain=
                ProxyCertChainPwd=
                ProxyPassphrase=
                ProxyURL=
                ProxyUsername=
                SyslogAddress=
                SyslogCertChain=
                SyslogCertChainPwd=
                SyslogPeerName=
                SyslogPort=514
                SyslogProtocol=UDP
                SyslogTLS=False
                UseRemoteAuditd=False
                UseRemoteSyslog=False
                Vnic0IPv4Address=${CDG1VNIC0.PrimaryPrivateIpAddress}
                Vnic0IPv4Gateway=${CDGInterface0Gateway}
                Vnic0IPv4Method=Static
                Vnic0IPv4Netmask=${CDGInterface0SubnetNetmask}
                Vnic0IPv4SkipGateway=False
                Vnic0IPv6Address=::0
                Vnic0IPv6Gateway=::1
                Vnic0IPv6Method=None
                Vnic0IPv6Netmask=64
                Vnic0IPv6SkipGateway=False
            - !If
              - DeployInterface1
              - !Sub |
                  Vnic1IPv4Address=${CDG1VNIC1.PrimaryPrivateIpAddress}
                  Vnic1IPv4Gateway=${CDGInterface1Gateway}
              - |
                  Vnic1IPv4Address=0.0.0.0
                  Vnic1IPv4Gateway=0.0.0.1
            - !Sub |
                Vnic1IPv4Method=Static
                Vnic1IPv4Netmask=${CDGInterface1SubnetNetmask}
                Vnic1IPv4SkipGateway=False
                Vnic1IPv6Address=::0
                Vnic1IPv6Gateway=::1
                Vnic1IPv6Method=None
                Vnic1IPv6Netmask=64
                Vnic1IPv6SkipGateway=False
            - !If
              - DeployInterface2
              - !Sub |
                  Vnic2IPv4Address=${CDG1VNIC2.PrimaryPrivateIpAddress}
                  Vnic2IPv4Gateway=${CDGInterface2Gateway}
              - |
                  Vnic2IPv4Address=0.0.0.0
                  Vnic2IPv4Gateway=0.0.0.1
            - !Sub |
                Vnic2IPv4Method=None
                Vnic2IPv4Netmask=${CDGInterface2SubnetNetmask}
                Vnic2IPv4SkipGateway=False
                Vnic2IPv6Address=::0
                Vnic2IPv6Gateway=::1
                Vnic2IPv6Method=None
                Vnic2IPv6Netmask=64
                Vnic2IPv6SkipGateway=False
                dg-adminPassword=${CDGSSHPassword}
                dg-operPassword=${CDGSSHPassword}

Outputs:
  CDGCStack:
    Description: The Name of the CDG cluster stack
    Value: !Sub ${AWS::StackName}
  CDGInterface0IPAddress:
    Value: !Sub ${CDG1VNIC0.PrimaryPrivateIpAddress}
  CDGInterface1IPAddress:
    Value: !Sub ${CDG1VNIC1.PrimaryPrivateIpAddress}
    Condition: DeployInterface1
  CDGInterface2IPAddress:
    Value: !Sub ${CDG1VNIC2.PrimaryPrivateIpAddress}
    Condition: DeployInterface2


