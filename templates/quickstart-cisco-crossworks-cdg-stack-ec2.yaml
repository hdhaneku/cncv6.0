# EC2 only version
Description: "Sample CF Template for CNC Stack to deploy 2 CDGs with CDG NLB"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "CNC CDG Network Configuration"
        Parameters:
          - VpcId
          - SSHPassword
          - CDGOperPassword
          - SecGroup
          - CDGAmiId
          - InstanceType
          - InterfaceDeploymentMode
          - UseExternalNLB
          - CdgPoolHostname
          - CdgInstanceHostname1
          - CdgInstanceHostname2
          - Route53DomainName
          - HostedZoneId
          - CDG1Interface0SubnetId
          - CDG1Interface0Gateway
          - CDG1Interface0SubnetNetmask
          - CDG1Interface1SubnetId
          - CDG1Interface1Gateway
          - CDG1Interface1SubnetNetmask
          - CDG1Interface2SubnetId
          - CDG1Interface2Gateway
          - CDG1Interface2SubnetNetmask
          - CDG2Interface0SubnetId
          - CDG2Interface0Gateway
          - CDG2Interface0SubnetNetmask
          - CDG2Interface1SubnetId
          - CDG2Interface1Gateway
          - CDG2Interface1SubnetNetmask
          - CDG2Interface2SubnetId
          - CDG2Interface2Gateway
          - CDG2Interface2SubnetNetmask
          - LBIPaddress1
          - LBIPaddress2
          - CNCControllerIP
          - CDGProfile
      - Label:
          default: "Cisco CNC Team use ONLY"
        Parameters:
          - CECid
          - Purpose
          - Customer
          - AllocationOwner
          - CNCProductGroup
          - SchedulingPolicy

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: Must be the VPC Id of an existing Virtual Private Cloud.

  SecGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Pre-created security group to be applied. Must allow ingress access for for all ports used by Cw, NSO, CDG, Cw and XR

  Route53DomainName:
    Description: Domain name used for all Route53 objects
    Type: String
    Default: "cwcisco.com"

  CDG1Interface0SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the 1st Interface subnet for the CDG Node 1.
    Default: subnet-07a8f8e38fc4257a8

  CDG1Interface0SubnetNetmask:
    Type: String
    Description: Enter the 1st Interface subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDG1Interface0Gateway:
    Type: String
    Description: Enter the 1st Interface default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: 10.10.91.1

  CDG1Interface1SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the 2nd Interface subnet for the CDG 1. Must be in a same AZ as of CDG1Interface0SubnetId.
    Default: subnet-0b499e844b77f4e2c

  CDG1Interface1SubnetNetmask:
    Type: String
    Description: Enter the 2nd Interface subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDG1Interface1Gateway:
    Type: String
    Description: Enter the 2nd Interface default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: 10.10.73.1

  CDG1Interface2SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the 3rd Interface subnet for CDG 1. Must be in a same AZ as of CDG1Interface0SubnetId.
    Default: subnet-0934d490c8126741e

  CDG1Interface2SubnetNetmask:
    Type: String
    Description: Enter the 3rd Interface subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDG1Interface2Gateway:
    Type: String
    Description: Enter the 3rd Interface default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: 10.10.63.1

  CDG2Interface0SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the 1st Interface subnet for the CDG Node 2
    Default: subnet-04de4dd5af5d12b38

  CDG2Interface0SubnetNetmask:
    Type: String
    Description: Enter the 1st Interface subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDG2Interface0Gateway:
    Type: String
    Description: Enter the 1st Interface default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: 10.10.90.1

  CDG2Interface1SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the 2nd Interface subnet for the CDG 2. Must be in a same AZ as of CDG2Interface0SubnetId.
    Default: subnet-0500d81736f214003

  CDG2Interface1SubnetNetmask:
    Type: String
    Description: Enter the 2nd Interface subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDG2Interface1Gateway:
    Type: String
    Description: Enter the 2nd Interface default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: 10.10.83.1

  CDG2Interface2SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the 3rd Interface subnet for CDG 2. Must be in a same AZ as of CDG2Interface0SubnetId.
    Default: subnet-0931479f8ba199e00

  CDG2Interface2SubnetNetmask:
    Type: String
    Description: Enter the 3rd Interface subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDG2Interface2Gateway:
    Type: String
    Description: Enter the 3rd Interface default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: 10.10.53.1

  InterfaceDeploymentMode:
    Type: String
    Description: Select single (all traffic), dual (Management + Data) or triple (Management + Data + Control) interface deployment mode.
    AllowedValues:
      - 1
      - 2
      - 3
    Default: 3

  UseExternalNLB:
    Type: String
    Description: For L3 HANetworkMode give True and for L2 HANetworkMode give False.
    AllowedValues:
      - "True"
      - "False"
    Default: "True"

  CDGAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide CDG AMI ID.
    Default: ami-0ad68ed1a68b5ba33

  HostedZoneId:
    Description: Enter HostedZone ID
    Type: String
    Default: Z0227555274KL9V9E3L58

  CdgPoolHostname:
    Description: Name of the Route53 record for the CDG HA Pools
    Type: String

  CdgInstanceHostname1:
    Description: CDG1 Instance Name
    Type: String

  CdgInstanceHostname2:
    Description: CDG2 Instance Name
    Type: String

  LBIPaddress1:
    Description: |
      Fixed IP address on for the CDG HA Pool on the first subnet. Set to 0.0.0.0 for the address to be automatically assigned.
      NOTE: This is the CDG HA Pool Load balancer IP address.
    Type: String
    Default: "0.0.0.0"

  LBIPaddress2:
    Description: |
      Fixed IP address for the CDG HA Pool on the second subnet. Set to 0.0.0.0 for the address to be automatically assigned.
      NOTE: This is the CDG HA Pool Load balancer IP address.
    Type: String
    Default: "0.0.0.0"

  SSHPassword:
    Type: String
    Description: The CNC SSH Password. NOTE; Use of external secret store is recommended.
    NoEcho: True

  CDGOperPassword:
    Type: String
    NoEcho: True
    Description: Enter the password to be configured on the CDG for Dg-Oper User

  InstanceType:
    Description: Enter EC2 instance type for the node instances.
    Type: String
    AllowedValues:
      - m5.4xlarge
      - m5.8xlarge
      - m5.2xlarge
      - m5.12xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.2xlarge
      - m5d.12xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.2xlarge
      - m5n.12xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.2xlarge
      - r5.12xlarge
      - c5.4xlarge
      - c5.8xlarge
      - c5.2xlarge
      - c5.12xlarge
      - m5zn.2xlarge
      - m5zn.3xlarge
      - m5zn.4xlarge
      - i3en.3xlarge
      - m5zn.6xlarge
      - r6i.4xlarge
    Default: m5.4xlarge

  CNCControllerIP:
    Description: CW Management FQDN if UseExternalNLB is True or CW Management VIP IP if UseExternalNLB is False
    Type: String

  CDGProfile:
    Type: String
    Description: Deployment profile of the CDG
    AllowedValues:
      - Standard
      - Extended
      - Crosswork-Cloud
    Default: Standard

  # Cisco internal section
  CECid:
    Description: Enter your Cisco CEC Id
    Type: String

  Purpose:
    Description: Deployment Purpose
    Type: String

  Customer:
    Description: Customer
    Type: String

  AllocationOwner:
    Description: Specify the allocation owner group for the deployment
    Type: String
    AllowedValues:
      - development
      - marketing
      - test
      - automation

  CNCProductGroup:
    Description: Enter Cisco Product Group
    Type: String
    AllowedValues:
      - CW-Infra
      - CDG
      - NSO
      - XR
      - SIT
      - BuildAutomation
      - Application
    Default: CDG

  SchedulingPolicy:
    Description: Enter The schedule
    Type: String
    AllowedValues:
      - eu-till-end-of-day-shut
      - pst-till-end-of-day-shut
      - ist-till-end-of-day-shut
      - pst-office-hours
      - ist-office-hours
      - eu-office-hours
      - no-schedule

  QSS3BucketName:
    Type: String
  QSS3BucketRegion:
    Type: String
  QSS3KeyPrefix:
    Type: String

Conditions:
  IsNLBNotExternal: !Equals
    - !Ref UseExternalNLB
    - "False"
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

Resources:
  CDG1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-cdg.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Sub ${VpcId}
        SecGroup: !Sub ${SecGroup}
        CDGSSHPassword: !Sub ${SSHPassword}
        CDGOperPassword: !Sub ${CDGOperPassword}
        CDGAmiId: !Sub ${CDGAmiId}
        CNCControllerIP: !Sub ${CNCControllerIP}
        CNCControllerPassword: !Sub ${SSHPassword}
        InterfaceDeploymentMode: !Sub ${InterfaceDeploymentMode}
        CDGInterface0SubnetId: !Sub ${CDG1Interface0SubnetId}
        CDGInterface0Gateway: !Sub ${CDG1Interface0Gateway}
        CDGInterface0SubnetNetmask: !Sub ${CDG1Interface0SubnetNetmask}
        CDGInterface1SubnetId: !Sub ${CDG1Interface1SubnetId}
        CDGInterface1Gateway: !Sub ${CDG1Interface1Gateway}
        CDGInterface1SubnetNetmask: !Sub ${CDG1Interface1SubnetNetmask}
        CDGInterface2SubnetId: !Sub ${CDG1Interface2SubnetId}
        CDGInterface2Gateway: !Sub ${CDG1Interface2Gateway}
        CDGInterface2SubnetNetmask: !Sub ${CDG1Interface2SubnetNetmask}
        InstanceType: !Sub ${InstanceType}
        CdgInstanceHostname: !Sub ${CdgInstanceHostname1}
        HANetworkMode: !If
          - IsNLBNotExternal
          - L2
          - L3
        CDGProfile: !Sub ${CDGProfile}
        #Cisco Specific
        CECid: !Sub ${CECid}
        Purpose: !Sub ${Purpose}
        Customer: !Sub ${Customer}
        AllocationOwner: !Sub ${AllocationOwner}
        CNCProductGroup: !Sub ${CNCProductGroup}
        SchedulingPolicy: !Sub ${SchedulingPolicy}
        #End of Cisco Specific
      Tags:
        - Key: !Sub cnc-stack-${AWS::StackName}
          Value: CDG2
      TimeoutInMinutes: 30

  CDG2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-cdg.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Sub ${VpcId}
        SecGroup: !Sub ${SecGroup}
        CDGSSHPassword: !Sub ${SSHPassword}
        CDGOperPassword: !Sub ${CDGOperPassword}
        CDGAmiId: !Sub ${CDGAmiId}
        CNCControllerIP: !Sub ${CNCControllerIP}
        CNCControllerPassword: !Sub ${SSHPassword}
        InterfaceDeploymentMode: !Sub ${InterfaceDeploymentMode}
        CDGInterface0SubnetId: !Sub ${CDG2Interface0SubnetId}
        CDGInterface0Gateway: !Sub ${CDG2Interface0Gateway}
        CDGInterface0SubnetNetmask: !Sub ${CDG2Interface0SubnetNetmask}
        CDGInterface1SubnetId: !Sub ${CDG2Interface1SubnetId}
        CDGInterface1Gateway: !Sub ${CDG2Interface1Gateway}
        CDGInterface1SubnetNetmask: !Sub ${CDG2Interface1SubnetNetmask}
        CDGInterface2SubnetId: !Sub ${CDG2Interface2SubnetId}
        CDGInterface2Gateway: !Sub ${CDG2Interface2Gateway}
        CDGInterface2SubnetNetmask: !Sub ${CDG2Interface2SubnetNetmask}
        InstanceType: !Sub ${InstanceType}
        CdgInstanceHostname: !Sub ${CdgInstanceHostname2}
        HANetworkMode: !If
          - IsNLBNotExternal
          - L2
          - L3
        CDGProfile: !Sub ${CDGProfile}
        #Cisco Specific
        CECid: !Sub ${CECid}
        Purpose: !Sub ${Purpose}
        Customer: !Sub ${Customer}
        AllocationOwner: !Sub ${AllocationOwner}
        CNCProductGroup: !Sub ${CNCProductGroup}
        SchedulingPolicy: !Sub ${SchedulingPolicy}
        #End of Cisco Specific
      Tags:
        - Key: !Sub cnc-stack-${AWS::StackName}
          Value: CDG2
      TimeoutInMinutes: 30

  CDGNLB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-cdg-nlb.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Sub ${VpcId}
        SubnetId1: !If
          - IsNLBNotExternal
          - !Sub ${CDG1Interface1SubnetId}
          - !Sub ${CDG1Interface2SubnetId}
        SubnetId2: !If
          - IsNLBNotExternal
          - !Sub ${CDG2Interface1SubnetId}
          - !Sub ${CDG2Interface2SubnetId}
        DomainName: !Sub ${Route53DomainName}
        HostedZoneId: !Sub ${HostedZoneId}
        CdgPoolHostname: !Sub ${CdgPoolHostname}
        CdgTargetIP1: !If
          - IsNLBNotExternal
          - !GetAtt [CDG1, Outputs.CDGInterface1IPAddress]
          - !GetAtt [CDG1, Outputs.CDGInterface2IPAddress]       
        CdgTargetIP2: !If
          - IsNLBNotExternal
          - !GetAtt [CDG2, Outputs.CDGInterface1IPAddress]
          - !GetAtt [CDG2, Outputs.CDGInterface2IPAddress]
        LBIPaddress1: !Sub ${LBIPaddress1}
        LBIPaddress2: !Sub ${LBIPaddress2}
      Tags:
        - Key: !Sub cnc-stack-${AWS::StackName}
          Value: CDGNLB
      TimeoutInMinutes: 30

Outputs:
  CNCClusterStackRoot:
    Description: The Name of the CNC cluster stack
    Value: !Sub ${AWS::StackName}
  CDG1Interface0IP:
    Value: !GetAtt
      - CDG1
      - Outputs.CDGInterface0IPAddress
  CDG1Interface1IP:
    Value: !GetAtt
      - CDG1
      - Outputs.CDGInterface1IPAddress
  CDG1Interface2IP:
    Value: !If
      - IsNLBNotExternal
      - "None"
      - !GetAtt [CDG1, Outputs.CDGInterface2IPAddress]
  CDG2Interface0IP:
    Value: !GetAtt
      - CDG2
      - Outputs.CDGInterface0IPAddress
  CDG2Interface1IP:
    Value: !GetAtt
      - CDG2
      - Outputs.CDGInterface1IPAddress
  CDG2Interface2IP:
    Value: !If
      - IsNLBNotExternal
      - "None"
      - !GetAtt [CDG2, Outputs.CDGInterface2IPAddress]
