# Author - Wojciech Dec (wdec@cisco.com)
# Modified by Sriharsha Dhanekula (hdhaneku@cisco.com) and Josh Leatham (jlleatha@amazon.com)

Description: "Sample template for deploying CDG4.0 VMs - v5.0"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "CDG Network Configuration"
        Parameters:
          - VpcId
          - SecGroup
          - CDGSSHPassword
          - CDGOperPassword
          - CDGAmiId
          - InstanceType
          - CNCControllerIP
          - CNCControllerPassword
          - InterfaceDeploymentMode
          - CDGInterface0SubnetId
          - CDGInterface0Gateway
          - CDGInterface0SubnetNetmask
          - CDGInterface1SubnetId
          - CDGInterface1Gateway
          - CDGInterface1SubnetNetmask
          - CDGInterface2SubnetId
          - CDGInterface2Gateway
          - CDGInterface2SubnetNetmask
          - HANetworkMode
          - CdgInstanceHostname
          - CDGProfile
          - DataDiskSize
      - Label:
          default: "OPTIONAL Parameters"
        Parameters:
          - CDGInterface0IPAddress
          - CDGInterface1IPAddress
          - CDGInterface2IPAddress
      - Label:
          default: "Cisco CNC Team use ONLY"
        Parameters:
          - CECid
          - Purpose
          - Customer
          - AllocationOwner
          - CNCProductGroup
          - SchedulingPolicy

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: Must be the VPC Id of an existing Virtual Private Cloud.

  CDGAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide CDG AMI ID

  CDGSSHPassword:
    Type: String
    NoEcho: True
    Description: Enter the SSH password to be configured on the CDG

  CDGOperPassword:
    Type: String
    NoEcho: True
    Description: Enter the password to be configured on the CDG for Dg-Oper User

  SecGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Pre-created security group to be applied. Must allow ingress access for ports 22, 30160:31560

  CNCControllerPassword:
    Type: String
    NoEcho: True
    Description: Enter the cw-admin user password used to access CNC/Cw Controller

  DataDiskSize:
    Description: CDG data disk size.
    Type: Number
    MinValue: 20
    Default: 50

  CDGProfile:
    Type: String
    Description: Deployment profile of the CDG
    AllowedValues:
      - Standard
      - Extended
      - Crosswork-Cloud
    Default: Standard

  InstanceType:
    Description: Enter EC2 instance type for the node instances.
    Type: String
    #KeyName: !Ref KeyName
    AllowedValues:
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.12xlarge
      - m5zn.3xlarge
      - i3en.3xlarge
      - m5zn.6xlarge
      - r6i.4xlarge
    Default: m5.2xlarge

  InterfaceDeploymentMode:
    Type: String
    Description: Select single (all traffic), dual (Management + Data) or triple (Management + Data + Control) interface deployment mode.
    AllowedValues:
      - 1
      - 2
      - 3

  CDGInterface0SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first interface subnet for the CDG VM.

  CDGInterface0Gateway:
    Type: String
    Description: Enter the  default gateway on the selected subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDGInterface1SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first interface subnet for the CDG VM. Ignored if not using dual interface mode.

  CDGInterface1Gateway:
    Type: String
    Description: Enter the  default gateway on the selected  subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: "0.0.0.1"

  CDGInterface2SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first interface subnet for the CDG VM. Ignored if not using triple interface mode.

  CDGInterface2Gateway:
    Type: String
    Description: Enter the  default gateway on the selected  subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: "0.0.0.1"

  CDGInterface0IPAddress:
    Type: String
    Description: OPTIONAL - Enter a *free* IP address on the 1st subnet. If set to "0.0.0.0", an IP address will be allocated automatically .
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})|^$

  CDGInterface0SubnetNetmask:
    Type: String
    Description: Enter the subnet netmask in dotted decimal form, eg 255.255.255.0.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDGInterface1IPAddress:
    Type: String
    Description: OPTIONAL - Enter a *free* IP address on the 2nd subnet. If set to 0.0.0.0, an IP address will be allocated automatically.
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})|^$

  CDGInterface1SubnetNetmask:
    Type: String
    Description: Enter the subnet netmask in dotted decimal form, eg 255.255.255.0. Ignored if not using dual interface mode.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CDGInterface2IPAddress:
    Type: String
    Description: OPTIONAL - Enter a *free* IP address on the 3rd subnet. If set to 0.0.0.0, an IP address will be allocated automatically.
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})|^$

  CDGInterface2SubnetNetmask:
    Type: String
    Description: Enter the subnet netmask in dotted decimal form, eg 255.255.255.0. Ignored if not using triple interface mode.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CNCControllerIP:
    Type: String
    Description: Specify the host address of the Crosswork CDG controller
    Default: ""

  HANetworkMode:
    Type: String
    Description: Select the CDG HA Mode. Use L3 for multi-subnet deployment.
    AllowedValues:
      - L2
      - L3
    Default: L2

  CdgInstanceHostname:
    Description: CDG Instance Name
    Type: String
    Default: cdgtest1

  # Cisco internal section
  CECid:
    Description: Enter your Cisco CEC Id
    Type: String

  Purpose:
    Description: Deployment Purpose
    Type: String

  Customer:
    Description: Customer
    Type: String

  AllocationOwner:
    Description: Specify the allocation owner group for the deployment
    Type: String
    AllowedValues:
      - development
      - marketing
      - test
      - automation

  CNCProductGroup:
    Description: Enter Cisco Product Group
    Type: String
    AllowedValues:
      - CW-Infra
      - CDG
      - NSO
      - XR
      - SIT
      - BuildAutomation
      - Application
    Default: CDG

  SchedulingPolicy:
    Description: Enter The schedule
    Type: String
    AllowedValues:
      - eu-till-end-of-day-shut
      - pst-till-end-of-day-shut
      - ist-till-end-of-day-shut
      - pst-office-hours
      - ist-office-hours
      - eu-office-hours
      - no-schedule

Conditions:
  DeployInterface0: !Or
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "1"
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "2"
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "3"

  DeployInterface1: !Or
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "2"
    - Fn::Equals:
      - !Ref InterfaceDeploymentMode
      - "3"

  DeployInterface2: !Equals
    - !Ref InterfaceDeploymentMode
    - "3"

  Setif0IP: !Not
    - !Equals
      - !Ref CDGInterface0IPAddress
      - "0.0.0.0"

  Setif1IP: !Not
    - !Equals
      - !Ref CDGInterface1IPAddress
      - "0.0.0.0"

  Setif2IP: !Not
    - !Equals
      - !Ref CDGInterface2IPAddress
      - "0.0.0.0"

  isL3Mode: !Equals
       - !Ref HANetworkMode
       - L3

Resources:
  EC2ENIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: eni-modification
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:AssignPrivateIpAddresses
                  - ec2:UnassignPrivateIpAddresses
                Resource: "*"

  CDGEC2IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${AWS::StackName}-CDG-EC2IamInstanceProfile
      Path: "/cdg/"
      Roles:
        - !Ref EC2ENIRole

  CDG1VNIC0:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: "CDG1-VNIC0"
      GroupSet:
        - !Ref SecGroup
      PrivateIpAddresses: !If
        - Setif0IP
        - - Primary: true
            PrivateIpAddress: !Ref CDGInterface0IPAddress
        - !Ref 'AWS::NoValue'
      SubnetId: !Ref CDGInterface0SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG1-VNIC0

  CDG1VNIC1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: "CDG1-VNIC1"
      GroupSet:
        - !Ref SecGroup
      PrivateIpAddresses: !If
        - Setif1IP
        - - Primary: true
            PrivateIpAddress: !Ref CDGInterface1IPAddress
        - !Ref 'AWS::NoValue'
      SubnetId: !Ref CDGInterface1SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG1-VNIC1
    Condition: DeployInterface1

  CDG1VNIC2:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: "CDG1-VNIC2"
      GroupSet:
        - !Ref SecGroup
      PrivateIpAddresses: !If
        - Setif2IP
        - - Primary: true
            PrivateIpAddress: !Ref CDGInterface2IPAddress
        - !Ref 'AWS::NoValue'
      SubnetId: !Ref CDGInterface2SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG1-VNIC2
    Condition: DeployInterface2


  CommonLaunchTemplateCDG4:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-CommonLaunchTemplateCDG4
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        ImageId: !Ref "CDGAmiId"
        BlockDeviceMappings:
          - Ebs:
              VolumeSize: !Ref DataDiskSize
              DeleteOnTermination: True
              VolumeType: standard
            DeviceName: /dev/sdb
        MetadataOptions:
          HttpPutResponseHopLimit: 2
        IamInstanceProfile:
          Arn: !GetAtt
            - CDGEC2IamInstanceProfile
            - Arn
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: cisco:allocation:business-group
                Value: "SPNAA:CNC"
              - Key: cisco:allocation:owner
                #Which functional group is responsible for this workload
                #Value one of:
                #development
                #marketing
                #test
                #automation
                Value: !Sub ${AllocationOwner}
              - Key: cisco:allocation:product-group
                #Identify the CNC component group
                #Value one of:
                #CW-Infra
                #CDG
                #NSO
                #XR
                #SIT
                #BuildAutomation
                #App:<name of app>
                Value: !Sub ${CNCProductGroup}
              - Key: cisco:allocation:userid
                #Cisco user id
                Value: !Sub ${CECid}
              - Key: cisco:allocation:product-release
                #Identify product release version
                Value: "5.0.0"
              - Key: cisco:allocation:customer-id
                #Identify customer name or PID
                Value: !Sub ${Customer}
              - Key: cisco:allocation:ticket-id
                #Relate to specific open ticket if any
                Value: ""
              - Key: cisco:operations:owner
                #Which team is responsible for the creation and maintenance of the resource
                #cw-build
                #other
                Value: ""
              - Key: cisco:operations:schedule-ec2
                #pst-office-hours
                #ist-office-hours
                #eu-office-hours
                #work-week-restart
                #pst-till-end-of-day-terminate
                #pst-till-end-of-day-shut
                #eu-till-end-of-day-shut
                #till-end-of-week-terminate
                #till-end-of-week-shut
                #no-schedule
                Value: !Sub ${SchedulingPolicy}
              - Key: cisco:operations:purpose
                #Value one of:
                #infra
                #build
                #development
                #test
                Value: !Sub ${Purpose}
              - Key: cisco:operations:cnc-cluster-id
                #Tag to indicate the relation of a set of resources as being part of the same CNC cluster
                Value: !Sub ${AWS::StackName}
              - Key: cisco:operations:termination-protection
                #Designates whether the VM is not meant to be terminated, even after being shut down
                #True/False
                Value: ""
              - Key: cisco:security:posture
                #Classify the resources security posture in terms of access
                #private
                #internet
                Value: ""
              - Key: cisco:data:classification
                #Classify the data container/represented by the resource
                #public, private, confidential, restricted
                Value: ""

  CDGInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        Version: 1
        LaunchTemplateId: !Ref CommonLaunchTemplateCDG4
      NetworkInterfaces: !If
        - DeployInterface2
        - - NetworkInterfaceId: !Ref CDG1VNIC0
            DeviceIndex: "0"
          - NetworkInterfaceId: !Ref CDG1VNIC1
            DeviceIndex: "1"
          - NetworkInterfaceId: !Ref CDG1VNIC2
            DeviceIndex: "2"
        - !If
          - DeployInterface1
          - - NetworkInterfaceId: !Ref CDG1VNIC0
              DeviceIndex: "0"
            - NetworkInterfaceId: !Ref CDG1VNIC1
              DeviceIndex: "1"
          - - NetworkInterfaceId: !Ref CDG1VNIC0
              DeviceIndex: "0"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CDG4.0
      UserData: !Base64
        Fn::Join:
          - ''
          - - !Sub |
              AwsIamRole=${EC2ENIRole}
              AllowRFC8190=Yes
              AuditdAddress=
              AuditdPort=60
              HANetworkMode=${HANetworkMode}
              ControllerCertChainPwd=${CNCControllerPassword}
              ControllerIP=${CNCControllerIP}
              ControllerPort=30607
              ControllerSignCertChain=cw-admin@${CNCControllerIP}:/home/cw-admin/controller.pem
              ControllerTlsCertChain=
              Deployment=Crosswork On-Premise
              Description=${CdgInstanceHostname}
              DGAppdataDisk=5
              DNS=169.254.169.253
              DNSSEC=False
              DNSTLS=False
              Domain=
              dg-adminPassword=${CDGSSHPassword}
              dg-operPassword=${CDGOperPassword}
              Hostname=${CdgInstanceHostname}
              Label=
              LLMNR=False
              mDNS=False
              NicAdministration=eth0
              NicDefaultGateway=eth0
              NicExternalLogging=eth0
              NicManagement=eth0
              NicControl=eth1
              NicNBExternalData=eth1
              NicNBSystemData=eth1
              NicSBData=eth2
              NTP=169.254.169.123
              NTPAuth=False
              PortSNMPTrap=1062
              PortSyslogUDP=9514
              PortSyslogTCP=9898
              PortSyslogTLS=6514
              Profile=${CDGProfile}
              UseRemoteAuditd=False
              UseRemoteSyslog=False
              Vnic0IPv4Address=${CDG1VNIC0.PrimaryPrivateIpAddress}
              Vnic0IPv4Gateway=${CDGInterface0Gateway}
              Vnic0IPv4Method=Static
              Vnic0IPv4Netmask=${CDGInterface0SubnetNetmask}
              Vnic0IPv4SkipGateway=False
              Vnic0IPv6Method=None
            - !If
              - DeployInterface1
              - !Sub |
                  Vnic1IPv4Address=${CDG1VNIC1.PrimaryPrivateIpAddress}
                  Vnic1IPv4Gateway=${CDGInterface1Gateway}
              - |
                  Vnic1IPv4Address=0.0.0.0
                  Vnic1IPv4Gateway=0.0.0.1
            - !Sub |
                Vnic1IPv4Method=Static
                Vnic1IPv4Netmask=${CDGInterface1SubnetNetmask}
                Vnic1IPv4SkipGateway=False
                Vnic1IPv6Method=None
            - !If
              - DeployInterface2
              - !Sub |
                  Vnic2IPv4Address=${CDG1VNIC2.PrimaryPrivateIpAddress}
                  Vnic2IPv4Gateway=${CDGInterface2Gateway}
              - |
                  Vnic2IPv4Address=0.0.0.0
                  Vnic2IPv4Gateway=0.0.0.1
            - !If
              - isL3Mode
              - !Sub |
                  Vnic2IPv4Method=Static
              - |
                  Vnic2IPv4Method=None
            - !Sub |
                Vnic2IPv4Netmask=${CDGInterface2SubnetNetmask}
                Vnic2IPv4SkipGateway=False
                Vnic2IPv6Method=None

Outputs:
  CDGCStack:
    Description: The Name of the CDG cluster stack
    Value: !Sub ${AWS::StackName}
  CDGInterface0IPAddress:
    Value: !Sub ${CDG1VNIC0.PrimaryPrivateIpAddress}
  CDGInterface1IPAddress:
    Value: !Sub ${CDG1VNIC1.PrimaryPrivateIpAddress}
    Condition: DeployInterface1
  CDGInterface2IPAddress:
    Value: !Sub ${CDG1VNIC2.PrimaryPrivateIpAddress}
    Condition: DeployInterface2


